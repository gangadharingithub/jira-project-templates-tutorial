<!DOCTYPE html>
<meta charset="utf-8">
<style>
	
	div#MultiLinechartcontainer {
	  font: 10px sans-serif;
	}
	
	.axis path,
	.axis line {
	  fill: none;
	  stroke: #000;
	  shape-rendering: crispEdges;
	}
	
	.x.axis path {
	  display: none;
	}
	
	.line {
	  fill: none;
	  stroke: steelblue;
	  stroke-width: 1.5px;
	}

</style>
<body>
<div id="MultiLinechartcontainer"></div>
<script>

function loadMultiLineChart(issueKey){
	
	jQuery.ajax({
		type: "GET",
		url:AJS.contextPath() +'/rest/project-templates-rest/1.0/requirementStatusChart/data',						
		data:{"issueKey":issueKey},						
		async : false,
		statusCode: {
			409: function() {								
				return false;
			}
		 },
		 success : function(data) {			 
			 //var data = data.dataPoints;				 
			 initializeLoadMultiLineChart(data);
		 }
	});
	
}
	

function initializeLoadMultiLineChart(data){	

	var margin = {top: 20, right: 80, bottom: 30, left: 30},
		width = 300 - margin.left - margin.right,
		height = 200 - margin.top - margin.bottom;
		
	var x = d3.time.scale()
    .range([0, width]);

	var y = d3.scale.linear()
	    .range([height, 0]);
	
	var xAxis = d3.svg.axis()
	    .scale(x)
	    .ticks(5)
	    .orient("bottom");
	
	var yAxis = d3.svg.axis()
	    .scale(y)	    
	    .orient("left")
	    .tickFormat(d3.format("d"))
    	.ticks(5);
	    
	var planVals = data.dataPoints.planVal;
	    
	planVals.forEach(function(d) {
	    d.date = new Date(d.date);
	    d.count = d.count
  	});
	
	var line = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.count); });
    		
	//remove the existing one and add it back to avoiding multiple charts being get added.
	if(jQuery("div#MultiLinechartcontainer svg")!=undefined){
		jQuery("div#MultiLinechartcontainer svg").remove();
	}
	
	var svg = d3.select("body").select("div#MultiLinechartcontainer").append("svg")
	    .attr("width", width + margin.left + margin.right)
	    .attr("height", height + margin.top + margin.bottom)
	  .append("g")
	    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
	    	
	x.domain([new Date(data.startDate),new Date(data.endDate)]);
	y.domain([0,d3.max(planVals, function(d) {return d.count;})]);
	
	svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);
	
	svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("count");

  	svg.append("path")
      .datum(planVals)
      .attr("class", "line")
      .attr("d", line);
	
}

</script>